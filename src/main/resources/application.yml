spring:
  datasource:
    url: ${DB_URL}
    username: ${USER_NAME}
    password: ${PASSWORD}
    driver-class-name: ${DRIVER_NAME}

  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB

  r2dbc:
    host: ${RDBHOST}
    url: ${RDB_URL}
    name: ${RDB_NAME}
    username: ${USER_NAME}
    password: ${PASSWORD}

  jpa:
    hibernate:
      ddl_auto: update
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 100
        open-in-view: false

  ai:
    openai:
      api-key: ${OPEN_AI_ACCESS_KEY}
      gpt-url: ${OPEN_AI_GPT_URL}
      dall-e-url: ${OPEN_AI_DALL_E_URL}
      dall-e-url-for-variation: ${OPEN_AI_DALL_E_URL_FOR_VARIATION}
      base-url: ${OPEN_AI_BASE_URL}

  mvc:
    async:
      request-timeout: 300000

logging:
  level:
    reactor:
      netty: DEBUG
    org.hibernate.SQL: info
    org.hibernate.type: trace
    org:
      springframework:
        r2dbc: DEBUG
        orm:
          jpa: DEBUG
        transaction: DEBUG

aws:
  s3:
    access-key: ${AWS_ACCESS_KEY}
    secret-key: ${AWS_SECRET_KEY}
    bucket: ${AWS_BUCKET_NAME}
    region: ${AWS_REGION}

server:
  connection-timeout: 60000 # 클라이언트와 연결되는 시간
  port: 8080
  servlet:
    session:
      timeout: 3600
      cookie:
        same-site: none  # SameSite 속성을 None으로 설정
        secure: true      # Secure 속성을 true로 설정 (HTTPS 사용 시 적용)